<Application
    x:Class="CSharpQuiz.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:conv="clr-namespace:CSharpQuiz.Converter"
    xmlns:local="clr-namespace:CSharpQuiz"
    xmlns:que="clr-namespace:CSharpQuiz.Questions"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ui:ThemesDictionary Theme="Dark" />
                <ui:ControlsDictionary />
            </ResourceDictionary.MergedDictionaries>


            <!--  Converters  -->
            <BrushConverter x:Key="BrushConverter" />
            <conv:BooleanToAppearanceConverter x:Key="BooleanToAppearanceConverter" />
            <conv:BooleanToOpacityConverter x:Key="BooleanToOpacityConverter" />
            <conv:InversedBooleanToVisibilityConverter x:Key="InversedBooleanToVisibilityConverter" />
            <conv:AddOneToInt x:Key="AddOneToInt" />


            <!--  DataTemplates  -->
            <DataTemplate DataType="{x:Type que:SingleChoiceQuestion}">
                <StackPanel>
                    <TextBlock
                        FontSize="17"
                        Text="{Binding Text}"
                        TextDecorations="Underline"
                        TextWrapping="Wrap" />
                    <TextBlock
                        Margin="0,2,0,12"
                        FontSize="13"
                        Opacity="0.5"
                        Text="{Binding TypeNote}"
                        TextWrapping="Wrap" />

                    <ListView ItemsSource="{Binding Choices}" SelectedIndex="{Binding SelectedIndex}">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <TextBlock
                                    Margin="12,8"
                                    Opacity="0.8"
                                    Text="{Binding}" />
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </StackPanel>
            </DataTemplate>


            <!--  Controls  -->
            <DrawingImage x:Key="IconImage">
                <DrawingImage.Drawing>
                    <DrawingGroup>
                        <GeometryDrawing Brush="#FFA179DC" Geometry="F1 M256,288z M0,0z M255.569,84.452376C255.567,79.622376 254.534,75.354376 252.445,71.691376 250.393,68.089376 247.32,65.070376 243.198,62.683376 209.173,43.064376 175.115,23.505376 141.101,3.86637605000001 131.931,-1.42762394999999 123.04,-1.23462394999999 113.938,4.13537605000001 100.395,12.122376 32.59,50.969376 12.385,62.672376 4.06400000000001,67.489376 0.0150000000000059,74.861376 0.0130000000000052,84.443376 5.23019128007007E-15,123.898376 0.0130000000000052,163.352376 5.23019128007007E-15,202.808376 5.23019128007007E-15,207.532376 0.991000000000005,211.717376 2.98800000000001,215.325376 5.04100000000001,219.036376 8.15700000000001,222.138376 12.374,224.579376 32.58,236.282376 100.394,275.126376 113.934,283.115376 123.04,288.488376 131.931,288.680376 141.104,283.384376 175.119,263.744376 209.179,244.186376 243.209,224.567376 247.426,222.127376 250.542,219.023376 252.595,215.315376 254.589,211.707376 255.582,207.522376 255.582,202.797376 255.582,202.797376 255.582,123.908376 255.569,84.452376" />
                        <GeometryDrawing Brush="#FF280068" Geometry="F1 M256,288z M0,0z M128.182,143.241376L2.98799999999999,215.325376C5.04099999999999,219.036376 8.15699999999999,222.138376 12.374,224.579376 32.58,236.282376 100.394,275.126376 113.934,283.115376 123.04,288.488376 131.931,288.680376 141.104,283.384376 175.119,263.744376 209.179,244.186376 243.209,224.567376 247.426,222.127376 250.542,219.023376 252.595,215.315376z" />
                        <GeometryDrawing Brush="#FF390091" Geometry="F1 M256,288z M0,0z M255.569,84.452376C255.567,79.622376,254.534,75.354376,252.445,71.691376L128.182,143.241376 252.595,215.315376C254.589,211.707376 255.58,207.522376 255.582,202.797376 255.582,202.797376 255.582,123.908376 255.569,84.452376" />
                        <GeometryDrawing Brush="#FFFFFFFF" Geometry="F1 M256,288z M0,0z M201.892326,116.294008L201.892326,129.767692 215.36601,129.767692 215.36601,116.294008 222.102852,116.294008 222.102852,129.767692 235.576537,129.767692 235.576537,136.504534 222.102852,136.504534 222.102852,149.978218 235.576537,149.978218 235.576537,156.71506 222.102852,156.71506 222.102852,170.188744 215.36601,170.188744 215.36601,156.71506 201.892326,156.71506 201.892326,170.188744 195.155484,170.188744 195.155484,156.71506 181.6818,156.71506 181.6818,149.978218 195.155484,149.978218 195.155484,136.504534 181.6818,136.504534 181.6818,129.767692 195.155484,129.767692 195.155484,116.294008z M215.36601,136.504534L201.892326,136.504534 201.892326,149.978218 215.36601,149.978218z" />
                        <GeometryDrawing Brush="#FFFFFFFF" Geometry="F1 M256,288z M0,0z M128.456752,48.625876C163.600523,48.625876,194.283885,67.7121741,210.718562,96.0819435L210.558192,95.808876 169.209615,119.617159C161.062959,105.823554,146.128136,96.5150717,128.996383,96.3233722L128.456752,96.3203544C102.331178,96.3203544 81.1506705,117.499743 81.1506705,143.625316 81.1506705,152.168931 83.4284453,160.17752 87.3896469,167.094792 95.543745,181.330045 110.872554,190.931398 128.456752,190.931398 146.149522,190.931398 161.565636,181.208041 169.67832,166.820563L169.481192,167.165876 210.767678,191.083913C194.51328,219.21347,164.25027,238.240861,129.514977,238.620102L128.456752,238.625876C93.2021701,238.625876 62.4315028,219.422052 46.0382398,190.902296 38.0352471,176.979327 33.4561922,160.837907 33.4561922,143.625316 33.4561922,91.1592636 75.9884604,48.625876 128.456752,48.625876z" />
                    </DrawingGroup>
                </DrawingImage.Drawing>
            </DrawingImage>

            <ControlTemplate x:Key="SettingsCard" TargetType="ContentControl">
                <ui:Card
                    Margin="4"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <Viewbox
                            Width="32"
                            Height="32"
                            Margin="0,0,8,0">
                            <ContentPresenter Content="{TemplateBinding Tag}" />
                        </Viewbox>

                        <StackPanel Grid.Column="1">
                            <ui:TextBlock
                                Margin="0"
                                FontTypography="BodyStrong"
                                Foreground="{DynamicResource TextFillColorPrimaryBrush}"
                                Text="{TemplateBinding Uid}"
                                TextWrapping="WrapWithOverflow" />
                            <ui:TextBlock
                                Appearance="Secondary"
                                Foreground="{DynamicResource TextFillColorSecondaryBrush}"
                                Text="{TemplateBinding ContentStringFormat}"
                                TextWrapping="WrapWithOverflow" />
                        </StackPanel>

                        <ContentPresenter
                            Grid.Column="2"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center" />
                    </Grid>
                </ui:Card>

            </ControlTemplate>


            <!--  Styles  -->
            <Style x:Key="Header" TargetType="TextBlock">
                <Style.Setters>
                    <Setter Property="Opacity" Value="0.7" />
                    <Setter Property="FontSize" Value="22" />
                    <Setter Property="FontWeight" Value="DemiBold" />
                    <Setter Property="Margin" Value="0,0,0,12" />
                </Style.Setters>
            </Style>


            <!--  Fix ContentDialog vertical sizing  -->
            <Style TargetType="{x:Type ui:ContentDialog}">
                <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
                <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
                <Setter Property="Border.CornerRadius" Value="{DynamicResource PopupCornerRadius}" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="DialogMaxHeight" Value="850" />
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="Padding" Value="24" />
                <Setter Property="DialogMaxWidth" Value="1000" />
                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="Focusable" Value="False" />
                <Setter Property="DialogMargin" Value="35" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Foreground" Value="{DynamicResource ContentDialogForeground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ContentDialogBorderBrush}" />
                <Setter Property="Background" Value="{DynamicResource ContentDialogBackground}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ui:ContentDialog}">
                            <Grid Background="{DynamicResource ContentDialogSmokeFill}" Focusable="False">

                                <Border
                                    MaxWidth="{TemplateBinding DialogWidth}"
                                    MaxHeight="{TemplateBinding DialogHeight}"
                                    Margin="{TemplateBinding DialogMargin}"
                                    VerticalAlignment="Center"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding Border.CornerRadius}"
                                    Focusable="False"
                                    Opacity="1">
                                    <Border.Effect>
                                        <DropShadowEffect
                                            BlurRadius="30"
                                            Direction="0"
                                            Opacity="0.4"
                                            ShadowDepth="0"
                                            Color="#202020" />
                                    </Border.Effect>

                                    <Grid Focusable="False">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <Border Background="{DynamicResource ContentDialogTopOverlay}" CornerRadius="{StaticResource DialogOverlayCornerRadius}" />
                                        <Grid
                                            Grid.Row="0"
                                            Margin="24,10"
                                            Focusable="False">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="*" />
                                            </Grid.RowDefinitions>

                                            <ContentPresenter
                                                Grid.Row="0"
                                                Margin="0,12,0,0"
                                                Content="{TemplateBinding Title}"
                                                ContentTemplate="{TemplateBinding TitleTemplate}"
                                                TextBlock.FontSize="20"
                                                TextBlock.FontWeight="SemiBold">
                                                <ContentPresenter.Resources>
                                                    <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="{x:Type TextBlock}">
                                                        <Setter Property="TextWrapping" Value="WrapWithOverflow" />
                                                        <Setter Property="FontSize" Value="20" />
                                                    </Style>
                                                </ContentPresenter.Resources>
                                            </ContentPresenter>

                                            <ui:PassiveScrollViewer
                                                x:Name="PART_ContentScroll"
                                                Grid.Row="1"
                                                Margin="0,20"
                                                Padding="0,0,12,0"
                                                CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}"
                                                HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                                IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                                                VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                                                <ContentPresenter
                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                    Content="{TemplateBinding Content}"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                    ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}">
                                                    <ContentPresenter.Resources>
                                                        <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="{x:Type TextBlock}">
                                                            <Setter Property="TextWrapping" Value="WrapWithOverflow" />
                                                            <Setter Property="TextAlignment" Value="Justify" />
                                                            <Setter Property="FontSize" Value="14" />
                                                        </Style>
                                                    </ContentPresenter.Resources>
                                                </ContentPresenter>
                                            </ui:PassiveScrollViewer>
                                        </Grid>

                                        <Border
                                            Grid.Row="1"
                                            Padding="{TemplateBinding Padding}"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Bottom"
                                            BorderBrush="{DynamicResource ContentDialogSeparatorBorderBrush}"
                                            BorderThickness="0,1,0,0"
                                            CornerRadius="{DynamicResource DialogFooterCornerRadius}"
                                            Focusable="False"
                                            Visibility="{TemplateBinding IsFooterVisible,
                                                                         Converter={StaticResource BoolToVisibilityConverter}}">

                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition x:Name="PrimaryColumn" Width="*" />
                                                    <ColumnDefinition x:Name="FirstSpacer" Width="8" />
                                                    <ColumnDefinition x:Name="SecondaryColumn" Width="*" />
                                                    <ColumnDefinition x:Name="SecondSpacer" Width="8" />
                                                    <ColumnDefinition x:Name="CloseColumn" Width="*" />
                                                </Grid.ColumnDefinitions>

                                                <ui:Button
                                                    Grid.Column="0"
                                                    HorizontalAlignment="Stretch"
                                                    Appearance="{TemplateBinding PrimaryButtonAppearance}"
                                                    Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type ui:ContentDialog}}, Mode=OneTime, Path=TemplateButtonCommand}"
                                                    CommandParameter="{x:Static ui:ContentDialogButton.Primary}"
                                                    Content="{TemplateBinding PrimaryButtonText}"
                                                    Icon="{TemplateBinding PrimaryButtonIcon}"
                                                    IsDefault="{TemplateBinding DefaultButton,
                                                                                Converter={StaticResource EnumToBoolConverter},
                                                                                ConverterParameter={x:Static ui:ContentDialogButton.Primary}}" />

                                                <ui:Button
                                                    Grid.Column="2"
                                                    HorizontalAlignment="Stretch"
                                                    Appearance="{TemplateBinding SecondaryButtonAppearance}"
                                                    Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type ui:ContentDialog}}, Mode=OneTime, Path=TemplateButtonCommand}"
                                                    CommandParameter="{x:Static ui:ContentDialogButton.Secondary}"
                                                    Content="{TemplateBinding SecondaryButtonText}"
                                                    Icon="{TemplateBinding SecondaryButtonIcon}"
                                                    IsDefault="{TemplateBinding DefaultButton,
                                                                                Converter={StaticResource EnumToBoolConverter},
                                                                                ConverterParameter={x:Static ui:ContentDialogButton.Secondary}}" />

                                                <ui:Button
                                                    Grid.Column="4"
                                                    HorizontalAlignment="Stretch"
                                                    Appearance="{TemplateBinding CloseButtonAppearance}"
                                                    Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type ui:ContentDialog}}, Mode=OneTime, Path=TemplateButtonCommand}"
                                                    CommandParameter="{x:Static ui:ContentDialogButton.Close}"
                                                    Content="{TemplateBinding CloseButtonText}"
                                                    Icon="{TemplateBinding CloseButtonIcon}"
                                                    IsCancel="True"
                                                    IsDefault="{TemplateBinding DefaultButton,
                                                                                Converter={StaticResource EnumToBoolConverter},
                                                                                ConverterParameter={x:Static ui:ContentDialogButton.Close}}" />
                                            </Grid>
                                        </Border>
                                    </Grid>
                                </Border>
                            </Grid>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPrimaryButtonEnabled" Value="False">
                                    <Setter TargetName="PrimaryColumn" Property="Width" Value="0" />
                                </Trigger>
                                <Trigger Property="IsSecondaryButtonEnabled" Value="False">
                                    <Setter TargetName="FirstSpacer" Property="Width" Value="0" />
                                    <Setter TargetName="SecondaryColumn" Property="Width" Value="0" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsPrimaryButtonEnabled" Value="False" />
                                        <Condition Property="IsSecondaryButtonEnabled" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.Setters>
                                        <Setter TargetName="SecondSpacer" Property="Width" Value="0" />
                                    </MultiTrigger.Setters>
                                </MultiTrigger>
                                <Trigger Property="PrimaryButtonText" Value="">
                                    <Setter Property="IsPrimaryButtonEnabled" Value="False" />
                                </Trigger>
                                <Trigger Property="SecondaryButtonText" Value="">
                                    <Setter Property="IsSecondaryButtonEnabled" Value="False" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </Application.Resources>
</Application>
