<Application
    x:Class="CSharpQuiz.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:conv="clr-namespace:CSharpQuiz.Converter"
    xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
    xmlns:ele="clr-namespace:CSharpQuiz.Views.Elements"
    xmlns:hlp="clr-namespace:CSharpQuiz.Helpers"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:mconv="clr-namespace:CSharpQuiz.MultiConverter"
    xmlns:que="clr-namespace:CSharpQuiz.Questions"
    xmlns:syn="clr-namespace:UI.SyntaxBox;assembly=UI.SyntaxBox"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ui:ThemesDictionary Theme="Dark" />
                <ui:ControlsDictionary />
            </ResourceDictionary.MergedDictionaries>


            <!--  Converters  -->
            <BrushConverter x:Key="BrushConverter" />
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <conv:BooleanToOpacityConverter x:Key="BooleanToOpacityConverter" />
            <conv:InversedBooleanToVisibilityConverter x:Key="InversedBooleanToVisibilityConverter" />
            <conv:AddOneToInt x:Key="AddOneToInt" />
            <conv:AbsoluteToRelativeConverter x:Key="AbsoluteToRelativeConverter" />
            <conv:InvertedAbsoluteToRelativeConverter x:Key="InvertedAbsoluteToRelativeConverter" />
            <conv:InverseBoolean x:Key="InverseBoolean" />
            <conv:IsTrueOrFalseItemCorrect x:Key="IsTrueOrFalseItemCorrect" />
            <conv:UnknownTypesToString x:Key="UnknownTypesToString" />
            <conv:IsCodingQuestionCorrect x:Key="IsCodingQuestionCorrect" />
            <conv:AddTo x:Key="AddTo" />

            <!--  MultiConverters  -->
            <mconv:IsSingleChoiceQuestionCorrect x:Key="IsSingleChoiceQuestionCorrect" />
            <mconv:IsMultipleChoiceQuestionCorrect x:Key="IsMultipleChoiceQuestionCorrect" />
            <mconv:IsReorderQuestionCorrect x:Key="IsReorderQuestionCorrect" />

            <!--  TemplateSelectors  -->
            <hlp:QuestionResultTemplateSelector x:Key="QuestionResultTemplateSelector" />


            <!--  Controls  -->
            <DrawingImage x:Key="IconImage">
                <DrawingImage.Drawing>
                    <DrawingGroup>
                        <GeometryDrawing Brush="#FFA179DC" Geometry="F1 M256,288z M0,0z M255.569,84.452376C255.567,79.622376 254.534,75.354376 252.445,71.691376 250.393,68.089376 247.32,65.070376 243.198,62.683376 209.173,43.064376 175.115,23.505376 141.101,3.86637605000001 131.931,-1.42762394999999 123.04,-1.23462394999999 113.938,4.13537605000001 100.395,12.122376 32.59,50.969376 12.385,62.672376 4.06400000000001,67.489376 0.0150000000000059,74.861376 0.0130000000000052,84.443376 5.23019128007007E-15,123.898376 0.0130000000000052,163.352376 5.23019128007007E-15,202.808376 5.23019128007007E-15,207.532376 0.991000000000005,211.717376 2.98800000000001,215.325376 5.04100000000001,219.036376 8.15700000000001,222.138376 12.374,224.579376 32.58,236.282376 100.394,275.126376 113.934,283.115376 123.04,288.488376 131.931,288.680376 141.104,283.384376 175.119,263.744376 209.179,244.186376 243.209,224.567376 247.426,222.127376 250.542,219.023376 252.595,215.315376 254.589,211.707376 255.582,207.522376 255.582,202.797376 255.582,202.797376 255.582,123.908376 255.569,84.452376" />
                        <GeometryDrawing Brush="#FF280068" Geometry="F1 M256,288z M0,0z M128.182,143.241376L2.98799999999999,215.325376C5.04099999999999,219.036376 8.15699999999999,222.138376 12.374,224.579376 32.58,236.282376 100.394,275.126376 113.934,283.115376 123.04,288.488376 131.931,288.680376 141.104,283.384376 175.119,263.744376 209.179,244.186376 243.209,224.567376 247.426,222.127376 250.542,219.023376 252.595,215.315376z" />
                        <GeometryDrawing Brush="#FF390091" Geometry="F1 M256,288z M0,0z M255.569,84.452376C255.567,79.622376,254.534,75.354376,252.445,71.691376L128.182,143.241376 252.595,215.315376C254.589,211.707376 255.58,207.522376 255.582,202.797376 255.582,202.797376 255.582,123.908376 255.569,84.452376" />
                        <GeometryDrawing Brush="#FFFFFFFF" Geometry="F1 M256,288z M0,0z M201.892326,116.294008L201.892326,129.767692 215.36601,129.767692 215.36601,116.294008 222.102852,116.294008 222.102852,129.767692 235.576537,129.767692 235.576537,136.504534 222.102852,136.504534 222.102852,149.978218 235.576537,149.978218 235.576537,156.71506 222.102852,156.71506 222.102852,170.188744 215.36601,170.188744 215.36601,156.71506 201.892326,156.71506 201.892326,170.188744 195.155484,170.188744 195.155484,156.71506 181.6818,156.71506 181.6818,149.978218 195.155484,149.978218 195.155484,136.504534 181.6818,136.504534 181.6818,129.767692 195.155484,129.767692 195.155484,116.294008z M215.36601,136.504534L201.892326,136.504534 201.892326,149.978218 215.36601,149.978218z" />
                        <GeometryDrawing Brush="#FFFFFFFF" Geometry="F1 M256,288z M0,0z M128.456752,48.625876C163.600523,48.625876,194.283885,67.7121741,210.718562,96.0819435L210.558192,95.808876 169.209615,119.617159C161.062959,105.823554,146.128136,96.5150717,128.996383,96.3233722L128.456752,96.3203544C102.331178,96.3203544 81.1506705,117.499743 81.1506705,143.625316 81.1506705,152.168931 83.4284453,160.17752 87.3896469,167.094792 95.543745,181.330045 110.872554,190.931398 128.456752,190.931398 146.149522,190.931398 161.565636,181.208041 169.67832,166.820563L169.481192,167.165876 210.767678,191.083913C194.51328,219.21347,164.25027,238.240861,129.514977,238.620102L128.456752,238.625876C93.2021701,238.625876 62.4315028,219.422052 46.0382398,190.902296 38.0352471,176.979327 33.4561922,160.837907 33.4561922,143.625316 33.4561922,91.1592636 75.9884604,48.625876 128.456752,48.625876z" />
                    </DrawingGroup>
                </DrawingImage.Drawing>
            </DrawingImage>

            <Style x:Key="SettingsCardStyle" TargetType="{x:Type ContentControl}">
                <Setter Property="Focusable" Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ContentControl}">
                            <ui:Card
                                Margin="4"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>

                                    <Viewbox
                                        Width="32"
                                        Height="32"
                                        Margin="0,0,8,0">
                                        <ContentPresenter Content="{TemplateBinding Tag}" />
                                    </Viewbox>

                                    <StackPanel Grid.Column="1">
                                        <ui:TextBlock
                                            Margin="0"
                                            FontTypography="BodyStrong"
                                            Foreground="{DynamicResource TextFillColorPrimaryBrush}"
                                            Text="{TemplateBinding Uid}"
                                            TextWrapping="WrapWithOverflow" />
                                        <ui:TextBlock
                                            Appearance="Secondary"
                                            Foreground="{DynamicResource TextFillColorSecondaryBrush}"
                                            Text="{TemplateBinding ContentStringFormat}"
                                            TextWrapping="WrapWithOverflow" />
                                    </StackPanel>

                                    <ContentPresenter
                                        Grid.Column="2"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Center" />
                                </Grid>
                            </ui:Card>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type GridSplitter}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Grid
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Background="Transparent">
                                <Rectangle
                                    Height="3"
                                    Fill="{DynamicResource TextFillColorPrimaryBrush}"
                                    Opacity="0.3"
                                    RadiusX="2"
                                    RadiusY="2" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <DrawingImage x:Key="CheckDrawing">
                <DrawingImage.Drawing>
                    <GeometryDrawing Geometry="F1 M24,24z M0,0z M4,12.6111L8.92308,17.5 20,6.5">
                        <GeometryDrawing.Pen>
                            <Pen
                                Brush="{DynamicResource TextFillColorTertiaryBrush}"
                                EndLineCap="Round"
                                LineJoin="Round"
                                StartLineCap="Round"
                                Thickness="2" />
                        </GeometryDrawing.Pen>
                    </GeometryDrawing>
                </DrawingImage.Drawing>
            </DrawingImage>

            <DrawingImage x:Key="CloseDrawing">
                <DrawingImage.Drawing>
                    <GeometryDrawing Brush="{DynamicResource TextFillColorTertiaryBrush}" Geometry="M19.207 6.207a1 1 0 0 0-1.414-1.414L12 10.586 6.207 4.793a1 1 0 0 0-1.414 1.414L10.586 12l-5.793 5.793a1 1 0 1 0 1.414 1.414L12 13.414l5.793 5.793a1 1 0 0 0 1.414-1.414L13.414 12l5.793-5.793z" />
                </DrawingImage.Drawing>
            </DrawingImage>

            <syn:SyntaxDriverCollection x:Key="SynDrivers">
                <syn:SyntaxConfig>
                    <syn:KeywordRule
                        Foreground="#c987ff"
                        Keywords="!,+,-,/,*,%,=,&amp;,^,|,&lt;,&gt;,;"
                        WholeWordsOnly="False" />
                    <syn:KeywordRule
                        Foreground="#ffdc73"
                        Keywords="(,),[,],{,}"
                        WholeWordsOnly="False" />

                    <syn:KeywordRule
                        Foreground="#d3ebb7"
                        Keywords="0,1,2,3,4,5,6,7,8,9"
                        WholeWordsOnly="False" />

                    <syn:RegexRule
                        Foreground="#fffdb5"
                        Op="Line"
                        Pattern="(?&lt;=\.|\s)\b\w+\b(?=\s*\()" />

                    <syn:RegexRule
                        Foreground="#7a7a7a"
                        Op="Line"
                        Pattern="^\s*#.*" />

                    <syn:RegexRule
                        Foreground="#ffa578"
                        Op="Line"
                        Pattern="&quot;(?:[^&quot;\\]|\\.)*&quot;" />
                    <syn:RegexRule
                        Foreground="#ffa578"
                        Op="Line"
                        Pattern="'(?:(?:[^'\\]|\\.)*?)'" />

                    <syn:KeywordRule Foreground="#7a9eff" Keywords="abstract,as,base,break,case,catch,class,const,continue,default,delegate,do,else,enum,event,explicit,extern,false,finally,fixed,for,foreach,goto,if,implicit,in,interface,internal,is,lock,namespace,new,null,operator,out,override,params,private,protected,public,readonly,ref,return,sealed,sizeof,stackalloc,static,struct,switch,this,throw,true,try,typeof,unchecked,unsafe,using,virtual,void,volatile,while,from,where,orderby,ascending,descending,select,group,by,join,equals,into,let" />
                    <syn:KeywordRule Foreground="#abc3ff" Keywords="bool,byte,char,decimal,double,float,int,long,object,sbyte,short,string,uint,ulong,ushort,var" />

                    <syn:RegexRule
                        Foreground="#6dc26f"
                        Op="Line"
                        Pattern="//.*" />
                </syn:SyntaxConfig>
            </syn:SyntaxDriverCollection>


            <!--  Styles  -->
            <Style x:Key="Header" TargetType="TextBlock">
                <Style.Setters>
                    <Setter Property="Opacity" Value="0.7" />
                    <Setter Property="FontSize" Value="22" />
                    <Setter Property="FontWeight" Value="DemiBold" />
                </Style.Setters>
            </Style>

            <Style TargetType="{x:Type ui:ContentDialog}">
                <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
                <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
                <Setter Property="Border.CornerRadius" Value="{DynamicResource PopupCornerRadius}" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="DialogMaxHeight" Value="850" />
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="Padding" Value="24" />
                <Setter Property="DialogMaxWidth" Value="1000" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="Focusable" Value="False" />
                <Setter Property="DialogMargin" Value="35" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Foreground" Value="{DynamicResource ContentDialogForeground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ContentDialogBorderBrush}" />
                <Setter Property="Background" Value="{DynamicResource ContentDialogBackground}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ui:ContentDialog}">
                            <Grid
                                Name="DialogSmoke"
                                Background="#70000000"
                                Focusable="False"
                                Opacity="0">
                                <Border
                                    Name="DialogContainer"
                                    MaxWidth="{TemplateBinding DialogWidth}"
                                    MaxHeight="{TemplateBinding DialogHeight}"
                                    Margin="{TemplateBinding DialogMargin}"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding Border.CornerRadius}"
                                    Focusable="False"
                                    Opacity="0">
                                    <Border.Effect>
                                        <DropShadowEffect
                                            BlurRadius="60"
                                            Direction="270"
                                            Opacity="0.5"
                                            ShadowDepth="20"
                                            Color="#202020" />
                                    </Border.Effect>

                                    <Grid Focusable="False">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <Border Background="{DynamicResource ContentDialogTopOverlay}" CornerRadius="{StaticResource DialogOverlayCornerRadius}" />
                                        <Grid
                                            Grid.Row="0"
                                            Margin="24,12,24,0"
                                            Focusable="False">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="*" />
                                            </Grid.RowDefinitions>

                                            <ContentPresenter
                                                Margin="0,12,0,0"
                                                Content="{TemplateBinding Title}"
                                                ContentTemplate="{TemplateBinding TitleTemplate}"
                                                TextBlock.FontSize="20"
                                                TextBlock.FontWeight="SemiBold">
                                                <ContentPresenter.Resources>
                                                    <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="{x:Type TextBlock}">
                                                        <Setter Property="TextWrapping" Value="WrapWithOverflow" />
                                                        <Setter Property="FontSize" Value="20" />
                                                    </Style>
                                                </ContentPresenter.Resources>
                                            </ContentPresenter>

                                            <ui:PassiveScrollViewer
                                                x:Name="PART_ContentScroll"
                                                Grid.Row="1"
                                                Margin="0,12,0,24"
                                                CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}"
                                                HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                                IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                                                VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                                                <ContentPresenter
                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                    Content="{TemplateBinding Content}"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                    ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}">
                                                    <ContentPresenter.Resources>
                                                        <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="{x:Type TextBlock}">
                                                            <Setter Property="TextWrapping" Value="WrapWithOverflow" />
                                                            <Setter Property="TextAlignment" Value="Justify" />
                                                            <Setter Property="FontSize" Value="14" />
                                                        </Style>
                                                    </ContentPresenter.Resources>
                                                </ContentPresenter>
                                            </ui:PassiveScrollViewer>
                                        </Grid>

                                        <Border
                                            Grid.Row="1"
                                            Padding="{TemplateBinding Padding}"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Bottom"
                                            BorderBrush="{DynamicResource ContentDialogSeparatorBorderBrush}"
                                            BorderThickness="0,1,0,0"
                                            CornerRadius="{DynamicResource DialogFooterCornerRadius}"
                                            Focusable="False"
                                            Visibility="{TemplateBinding IsFooterVisible,
                                                                         Converter={StaticResource BoolToVisibilityConverter}}">

                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition x:Name="PrimaryColumn" Width="*" />
                                                    <ColumnDefinition x:Name="FirstSpacer" Width="8" />
                                                    <ColumnDefinition x:Name="SecondaryColumn" Width="*" />
                                                    <ColumnDefinition x:Name="SecondSpacer" Width="8" />
                                                    <ColumnDefinition x:Name="CloseColumn" Width="*" />
                                                </Grid.ColumnDefinitions>

                                                <ui:Button
                                                    Grid.Column="0"
                                                    HorizontalAlignment="Stretch"
                                                    Appearance="{TemplateBinding PrimaryButtonAppearance}"
                                                    Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type ui:ContentDialog}}, Mode=OneTime, Path=TemplateButtonCommand}"
                                                    CommandParameter="{x:Static ui:ContentDialogButton.Primary}"
                                                    Content="{TemplateBinding PrimaryButtonText}"
                                                    Icon="{TemplateBinding PrimaryButtonIcon}"
                                                    IsDefault="{TemplateBinding DefaultButton,
                                                                                Converter={StaticResource EnumToBoolConverter},
                                                                                ConverterParameter={x:Static ui:ContentDialogButton.Primary}}" />

                                                <ui:Button
                                                    Grid.Column="2"
                                                    HorizontalAlignment="Stretch"
                                                    Appearance="{TemplateBinding SecondaryButtonAppearance}"
                                                    Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type ui:ContentDialog}}, Mode=OneTime, Path=TemplateButtonCommand}"
                                                    CommandParameter="{x:Static ui:ContentDialogButton.Secondary}"
                                                    Content="{TemplateBinding SecondaryButtonText}"
                                                    Icon="{TemplateBinding SecondaryButtonIcon}"
                                                    IsDefault="{TemplateBinding DefaultButton,
                                                                                Converter={StaticResource EnumToBoolConverter},
                                                                                ConverterParameter={x:Static ui:ContentDialogButton.Secondary}}" />

                                                <ui:Button
                                                    Grid.Column="4"
                                                    HorizontalAlignment="Stretch"
                                                    Appearance="{TemplateBinding CloseButtonAppearance}"
                                                    Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type ui:ContentDialog}}, Mode=OneTime, Path=TemplateButtonCommand}"
                                                    CommandParameter="{x:Static ui:ContentDialogButton.Close}"
                                                    Content="{TemplateBinding CloseButtonText}"
                                                    Icon="{TemplateBinding CloseButtonIcon}"
                                                    IsCancel="True"
                                                    IsDefault="{TemplateBinding DefaultButton,
                                                                                Converter={StaticResource EnumToBoolConverter},
                                                                                ConverterParameter={x:Static ui:ContentDialogButton.Close}}" />
                                            </Grid>
                                        </Border>
                                    </Grid>
                                </Border>
                            </Grid>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPrimaryButtonEnabled" Value="False">
                                    <Setter TargetName="PrimaryColumn" Property="Width" Value="0" />
                                </Trigger>
                                <Trigger Property="IsSecondaryButtonEnabled" Value="False">
                                    <Setter TargetName="FirstSpacer" Property="Width" Value="0" />
                                    <Setter TargetName="SecondaryColumn" Property="Width" Value="0" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsPrimaryButtonEnabled" Value="False" />
                                        <Condition Property="IsSecondaryButtonEnabled" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.Setters>
                                        <Setter TargetName="SecondSpacer" Property="Width" Value="0" />
                                    </MultiTrigger.Setters>
                                </MultiTrigger>
                                <Trigger Property="PrimaryButtonText" Value="">
                                    <Setter Property="IsPrimaryButtonEnabled" Value="False" />
                                </Trigger>
                                <Trigger Property="SecondaryButtonText" Value="">
                                    <Setter Property="IsSecondaryButtonEnabled" Value="False" />
                                </Trigger>

                                <Trigger Property="Visibility" Value="Visible">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                                    Storyboard.TargetName="DialogSmoke"
                                                    Storyboard.TargetProperty="Opacity"
                                                    To="1"
                                                    Duration="0:0:0.125" />
                                                <DoubleAnimation
                                                    BeginTime="0:0:0.125"
                                                    Storyboard.TargetName="DialogContainer"
                                                    Storyboard.TargetProperty="Opacity"
                                                    To="1"
                                                    Duration="0:0:0.15" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="AnswerListViewItemStyle" TargetType="{x:Type ListViewItem}">
                <Setter Property="Foreground" Value="{DynamicResource ListViewItemForeground}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Border.CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
                <Setter Property="Margin" Value="0,0,0,2" />
                <Setter Property="Padding" Value="4" />
                <Setter Property="IsEnabled" Value="False" />
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Border
                                x:Name="Border"
                                Margin="0"
                                Padding="0"
                                Background="Transparent"
                                BorderThickness="1"
                                CornerRadius="{TemplateBinding Border.CornerRadius}">
                                <Grid>
                                    <Border
                                        Background="{TemplateBinding Background}"
                                        BorderThickness="1"
                                        CornerRadius="{TemplateBinding Border.CornerRadius}"
                                        Opacity="0.2" />
                                    <ContentPresenter Margin="{TemplateBinding Padding}" />
                                    <Rectangle
                                        x:Name="ActiveRectangle"
                                        Width="3"
                                        Height="18"
                                        Margin="0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        Fill="{DynamicResource ListViewItemPillFillBrush}"
                                        RadiusX="2"
                                        RadiusY="2"
                                        Visibility="Collapsed" />
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsEnabled" Value="True" />
                                        <Condition Property="IsMouseOver" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource ListViewItemBackgroundPointerOver}" />

                                </MultiTrigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="ActiveRectangle" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource ListViewItemBackgroundPointerOver}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <SolidColorBrush x:Key="CardBackgroundOverlayBrush" Color="#313131" />


            <!--  DataTemplates  -->
            <DataTemplate DataType="{x:Type que:SingleChoiceQuestion}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <ele:QuestionHeader />

                    <ListView
                        Grid.Row="1"
                        ItemsSource="{Binding Choices}"
                        ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                        SelectedItem="{Binding SelectedItem, Mode=TwoWay}">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <TextBlock
                                    Margin="12,8"
                                    Opacity="0.8"
                                    Text="{Binding}"
                                    TextWrapping="Wrap" />
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </Grid>
            </DataTemplate>

            <DataTemplate x:Key="SingleChoiceAnswerTemplate" DataType="{x:Type que:SingleChoiceQuestion}">
                <ui:Card Margin="0,0,0,8" Padding="12">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <ele:AnswerHeader />

                        <ListView
                            Grid.Row="1"
                            ItemContainerStyle="{StaticResource AnswerListViewItemStyle}"
                            ItemsSource="{Binding Choices}"
                            ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                            SelectedItem="{Binding SelectedItem, Mode=OneWay}">
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="12" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Border
                                            Name="BackgroundBorder"
                                            Grid.ColumnSpan="3"
                                            Margin="-4"
                                            CornerRadius="4"
                                            Opacity="0.25" />

                                        <TextBlock
                                            Margin="12,8"
                                            Opacity="0.8"
                                            Text="{Binding}"
                                            TextWrapping="Wrap" />
                                        <Border
                                            Name="SelectedIndicator"
                                            Grid.Column="2"
                                            Padding="4"
                                            VerticalAlignment="Center"
                                            Background="{DynamicResource CardBackgroundPointerOver}"
                                            CornerRadius="4"
                                            Visibility="Collapsed">
                                            <TextBlock
                                                FontSize="14"
                                                FontWeight="DemiBold"
                                                Opacity="0.7"
                                                Text="Deine Antwort" />
                                        </Border>
                                    </Grid>

                                    <DataTemplate.Triggers>
                                        <DataTrigger Value="True">
                                            <DataTrigger.Binding>
                                                <MultiBinding Converter="{StaticResource IsSingleChoiceQuestionCorrect}">
                                                    <Binding />
                                                    <Binding Path="DataContext" RelativeSource="{RelativeSource AncestorType=ListView}" />
                                                </MultiBinding>
                                            </DataTrigger.Binding>

                                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{DynamicResource SystemFillColorSuccessBrush}" />
                                        </DataTrigger>

                                        <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType=ListViewItem}}" Value="True">
                                            <Setter TargetName="SelectedIndicator" Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </Grid>
                </ui:Card>
            </DataTemplate>


            <DataTemplate DataType="{x:Type que:MultipleChoiceQuestion}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <ele:QuestionHeader />

                    <ListView
                        Name="ItemContainer"
                        Grid.Row="1"
                        ItemsSource="{Binding Choices}"
                        ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                        SelectionMode="Multiple">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                <i:InvokeCommandAction Command="{Binding ListViewSelectionChangedCommand}" CommandParameter="{Binding ElementName=ItemContainer}" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="Loaded">
                                <i:InvokeCommandAction Command="{Binding ListViewLoadedCommand}" CommandParameter="{Binding ElementName=ItemContainer}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>

                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <TextBlock
                                    Margin="12,8"
                                    Opacity="0.8"
                                    Text="{Binding}"
                                    TextWrapping="Wrap" />
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </Grid>
            </DataTemplate>

            <DataTemplate x:Key="MultipleChoiceAnswerTemplate" DataType="{x:Type que:MultipleChoiceQuestion}">
                <ui:Card Margin="0,0,0,8" Padding="12">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <ele:AnswerHeader />

                        <ListView
                            Name="ItemContainer"
                            Grid.Row="1"
                            ItemContainerStyle="{StaticResource AnswerListViewItemStyle}"
                            ItemsSource="{Binding Choices}"
                            ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                            SelectionMode="Multiple">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Loaded">
                                    <i:InvokeCommandAction Command="{Binding ListViewLoadedCommand}" CommandParameter="{Binding ElementName=ItemContainer}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>

                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="12" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Border
                                            Name="BackgroundBorder"
                                            Grid.ColumnSpan="3"
                                            Margin="-4"
                                            CornerRadius="4"
                                            Opacity="0.25" />

                                        <TextBlock
                                            Margin="12,8"
                                            Opacity="0.8"
                                            Text="{Binding}"
                                            TextWrapping="Wrap" />
                                        <Border
                                            Name="SelectedIndicator"
                                            Grid.Column="2"
                                            Padding="4"
                                            VerticalAlignment="Center"
                                            Background="{DynamicResource CardBackgroundPointerOver}"
                                            CornerRadius="4"
                                            Visibility="Collapsed">
                                            <TextBlock
                                                FontSize="14"
                                                FontWeight="DemiBold"
                                                Opacity="0.7"
                                                Text="Deine Antwort" />
                                        </Border>
                                    </Grid>

                                    <DataTemplate.Triggers>
                                        <DataTrigger Value="True">
                                            <DataTrigger.Binding>
                                                <MultiBinding Converter="{StaticResource IsMultipleChoiceQuestionCorrect}">
                                                    <Binding />
                                                    <Binding Path="DataContext" RelativeSource="{RelativeSource AncestorType=ListView}" />
                                                </MultiBinding>
                                            </DataTrigger.Binding>

                                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{DynamicResource SystemFillColorSuccessBrush}" />
                                        </DataTrigger>

                                        <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType=ListViewItem}}" Value="True">
                                            <Setter TargetName="SelectedIndicator" Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </Grid>
                </ui:Card>
            </DataTemplate>


            <DataTemplate DataType="{x:Type que:ReorderQuestion}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <ele:QuestionHeader />

                    <ItemsControl
                        Grid.Row="1"
                        dd:DragDrop.IsDragSource="True"
                        dd:DragDrop.IsDropTarget="True"
                        ItemsSource="{Binding Items}"
                        ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <ListViewItem Margin="0,-0.7" Cursor="Hand">
                                    <Grid Background="Transparent">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="12" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>

                                        <Canvas
                                            Width="16"
                                            Height="10"
                                            Margin="16,0,12,0"
                                            VerticalAlignment="Center">
                                            <Ellipse
                                                Width="4"
                                                Height="4"
                                                Fill="{DynamicResource TextFillColorTertiaryBrush}" />
                                            <Ellipse
                                                Canvas.Left="6"
                                                Width="4"
                                                Height="4"
                                                Fill="{DynamicResource TextFillColorTertiaryBrush}" />
                                            <Ellipse
                                                Canvas.Left="12"
                                                Width="4"
                                                Height="4"
                                                Fill="{DynamicResource TextFillColorTertiaryBrush}" />
                                            <Ellipse
                                                Canvas.Top="6"
                                                Width="4"
                                                Height="4"
                                                Fill="{DynamicResource TextFillColorTertiaryBrush}" />
                                            <Ellipse
                                                Canvas.Left="6"
                                                Canvas.Top="6"
                                                Width="4"
                                                Height="4"
                                                Fill="{DynamicResource TextFillColorTertiaryBrush}" />
                                            <Ellipse
                                                Canvas.Left="12"
                                                Canvas.Top="6"
                                                Width="4"
                                                Height="4"
                                                Fill="{DynamicResource TextFillColorTertiaryBrush}" />
                                        </Canvas>

                                        <TextBlock
                                            Grid.Column="2"
                                            Margin="12,8"
                                            Opacity="0.8"
                                            Text="{Binding}"
                                            TextWrapping="Wrap" />
                                    </Grid>
                                </ListViewItem>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </Grid>
            </DataTemplate>

            <DataTemplate x:Key="ReorderAnswerTemplate" DataType="{x:Type que:ReorderQuestion}">
                <ui:Card Margin="0,0,0,8" Padding="12">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <ele:AnswerHeader />

                        <ItemsControl
                            Grid.Row="1"
                            ItemsSource="{Binding CorrectItemsOrder}"
                            ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <ListViewItem IsEnabled="False">
                                        <Grid Background="Transparent">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="12" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <Border
                                                Name="BackgroundBorder"
                                                Grid.ColumnSpan="3"
                                                Margin="-4"
                                                CornerRadius="4"
                                                Opacity="0.25" />

                                            <Canvas
                                                Width="16"
                                                Height="10"
                                                Margin="16,0,12,0"
                                                VerticalAlignment="Center">
                                                <Ellipse
                                                    Width="4"
                                                    Height="4"
                                                    Fill="{DynamicResource TextFillColorTertiaryBrush}" />
                                                <Ellipse
                                                    Canvas.Left="6"
                                                    Width="4"
                                                    Height="4"
                                                    Fill="{DynamicResource TextFillColorTertiaryBrush}" />
                                                <Ellipse
                                                    Canvas.Left="12"
                                                    Width="4"
                                                    Height="4"
                                                    Fill="{DynamicResource TextFillColorTertiaryBrush}" />
                                                <Ellipse
                                                    Canvas.Top="6"
                                                    Width="4"
                                                    Height="4"
                                                    Fill="{DynamicResource TextFillColorTertiaryBrush}" />
                                                <Ellipse
                                                    Canvas.Left="6"
                                                    Canvas.Top="6"
                                                    Width="4"
                                                    Height="4"
                                                    Fill="{DynamicResource TextFillColorTertiaryBrush}" />
                                                <Ellipse
                                                    Canvas.Left="12"
                                                    Canvas.Top="6"
                                                    Width="4"
                                                    Height="4"
                                                    Fill="{DynamicResource TextFillColorTertiaryBrush}" />
                                            </Canvas>

                                            <TextBlock
                                                Grid.Column="2"
                                                Margin="12,8"
                                                Opacity="0.8"
                                                Text="{Binding}"
                                                TextWrapping="Wrap" />
                                        </Grid>
                                    </ListViewItem>

                                    <DataTemplate.Triggers>
                                        <DataTrigger Value="True">
                                            <DataTrigger.Binding>
                                                <MultiBinding Converter="{StaticResource IsReorderQuestionCorrect}">
                                                    <Binding />
                                                    <Binding Path="DataContext" RelativeSource="{RelativeSource AncestorType=ItemsControl}" />
                                                </MultiBinding>
                                            </DataTrigger.Binding>

                                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{DynamicResource SystemFillColorSuccessBrush}" />
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </Grid>
                </ui:Card>
            </DataTemplate>


            <DataTemplate DataType="{x:Type que:TrueOrFalseQuestion}">
                <Grid VerticalAlignment="Top">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <ele:QuestionHeader />

                    <Grid Grid.Row="1" Margin="0,4,64,12">
                        <Image
                            Width="22"
                            Height="22"
                            HorizontalAlignment="Right"
                            Source="{StaticResource CheckDrawing}" />
                        <Image
                            Width="18"
                            Height="18"
                            Margin="0,0,-47,0"
                            HorizontalAlignment="Right"
                            Source="{StaticResource CloseDrawing}" />
                    </Grid>

                    <ItemsControl Grid.Row="2" ItemsSource="{Binding Items}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Grid Margin="6" Background="Transparent">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="30" />
                                        <ColumnDefinition Width="32" />
                                        <ColumnDefinition Width="16" />
                                        <ColumnDefinition Width="32" />
                                    </Grid.ColumnDefinitions>

                                    <TextBlock
                                        Margin="0,8"
                                        Text="{Binding Text}"
                                        TextWrapping="Wrap" />

                                    <CheckBox Grid.Column="2" IsChecked="{Binding IsTrue, Mode=TwoWay}" />
                                    <CheckBox Grid.Column="4" IsChecked="{Binding IsFalse, Mode=TwoWay}" />
                                </Grid>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>

                    <Rectangle
                        Grid.RowSpan="2"
                        Height="2"
                        Margin="0,92,4,0"
                        VerticalAlignment="Top"
                        Fill="{DynamicResource TextFillColorTertiaryBrush}"
                        Opacity="0.5" />
                    <Rectangle
                        Grid.RowSpan="3"
                        Width="2"
                        Margin="0,60,50,0"
                        HorizontalAlignment="Right"
                        Fill="{DynamicResource TextFillColorTertiaryBrush}"
                        Opacity="0.5" />
                    <Rectangle
                        Grid.RowSpan="3"
                        Width="2"
                        Margin="0,60,98,0"
                        HorizontalAlignment="Right"
                        Fill="{DynamicResource TextFillColorTertiaryBrush}"
                        Opacity="0.5" />
                </Grid>
            </DataTemplate>

            <DataTemplate x:Key="TrueOrFalseAnswerTemplate" DataType="{x:Type que:TrueOrFalseQuestion}">
                <ui:Card Margin="0,0,0,8" Padding="12">
                    <Grid VerticalAlignment="Top">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <ele:AnswerHeader />

                        <Grid Grid.Row="1" Margin="0,4,64,12">
                            <Image
                                Width="22"
                                Height="22"
                                HorizontalAlignment="Right"
                                Source="{StaticResource CheckDrawing}" />
                            <Image
                                Width="18"
                                Height="18"
                                Margin="0,0,-47,0"
                                HorizontalAlignment="Right"
                                Source="{StaticResource CloseDrawing}" />
                        </Grid>

                        <ItemsControl Grid.Row="2" ItemsSource="{Binding Items}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Grid Margin="6" Background="Transparent">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="30" />
                                            <ColumnDefinition Width="32" />
                                            <ColumnDefinition Width="16" />
                                            <ColumnDefinition Width="32" />
                                        </Grid.ColumnDefinitions>
                                        <Border
                                            Name="BackgroundBorder"
                                            Grid.ColumnSpan="7"
                                            Margin="-4"
                                            CornerRadius="4"
                                            Opacity="0.25" />

                                        <TextBlock
                                            Margin="0,8"
                                            Opacity="0.8"
                                            Text="{Binding Text}"
                                            TextWrapping="Wrap" />

                                        <CheckBox
                                            Grid.Column="2"
                                            IsChecked="{Binding IsCorrect}"
                                            IsHitTestVisible="False" />
                                        <CheckBox
                                            Grid.Column="4"
                                            IsChecked="{Binding IsCorrect, Converter={StaticResource InverseBoolean}}"
                                            IsHitTestVisible="False" />
                                    </Grid>

                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding Converter={StaticResource IsTrueOrFalseItemCorrect}}" Value="True">
                                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{DynamicResource SystemFillColorSuccessBrush}" />
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>

                        <Rectangle
                            Grid.RowSpan="2"
                            Height="2"
                            Margin="0,92,4,0"
                            VerticalAlignment="Top"
                            Fill="{DynamicResource TextFillColorTertiaryBrush}"
                            Opacity="0.5" />
                        <Rectangle
                            Grid.RowSpan="3"
                            Width="2"
                            Margin="0,60,50,0"
                            HorizontalAlignment="Right"
                            Fill="{DynamicResource TextFillColorTertiaryBrush}"
                            Opacity="0.5" />
                        <Rectangle
                            Grid.RowSpan="3"
                            Width="2"
                            Margin="0,60,98,0"
                            HorizontalAlignment="Right"
                            Fill="{DynamicResource TextFillColorTertiaryBrush}"
                            Opacity="0.5" />
                    </Grid>
                </ui:Card>
            </DataTemplate>


            <DataTemplate DataType="{x:Type que:CodingQuestion}">
                <Grid Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=ScrollViewer}, Converter={StaticResource AddTo}, ConverterParameter=-50}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="1*" MinHeight="120" />
                        <RowDefinition Height="19" />
                        <RowDefinition Height="0*" MinHeight="65" />
                    </Grid.RowDefinitions>

                    <ele:QuestionHeader />

                    <ScrollViewer
                        Name="CodingContainer"
                        Grid.Row="1"
                        HorizontalScrollBarVisibility="Auto">
                        <ScrollViewer.OpacityMask>
                            <VisualBrush>
                                <VisualBrush.Visual>
                                    <Rectangle
                                        Width="{Binding ActualWidth, ElementName=CodingContainer}"
                                        Height="{Binding ActualHeight, ElementName=CodingContainer}"
                                        Fill="Black"
                                        RadiusX="5"
                                        RadiusY="5" />
                                </VisualBrush.Visual>
                            </VisualBrush>
                        </ScrollViewer.OpacityMask>

                        <TextBox
                            VerticalAlignment="Stretch"
                            syn:SyntaxBox.Enable="True"
                            syn:SyntaxBox.ExpandTabs="True"
                            syn:SyntaxBox.LineNumbersBackground="#202020"
                            syn:SyntaxBox.LineNumbersForeground="{DynamicResource TextFillColorDisabledBrush}"
                            syn:SyntaxBox.ShowLineNumbers="True"
                            syn:SyntaxBox.SyntaxDrivers="{StaticResource SynDrivers}"
                            AcceptsReturn="True"
                            AcceptsTab="True"
                            Background="#202020"
                            BorderThickness="0"
                            CaretBrush="White"
                            FontFamily="Consolas"
                            FontSize="16"
                            Foreground="#ffffff"
                            Text="{Binding Code, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </ScrollViewer>

                    <Grid
                        Grid.Row="1"
                        Margin="7,2,25,7"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Top">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="32" />
                            <ColumnDefinition Width="4" />
                            <ColumnDefinition Width="32" />
                        </Grid.ColumnDefinitions>
                        <Rectangle
                            Grid.ColumnSpan="5"
                            Margin="-7"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Fill="{DynamicResource CardBackgroundOverlayBrush}"
                            RadiusX="8"
                            RadiusY="8" />

                        <ui:Button
                            Width="32"
                            Height="32"
                            Padding="0"
                            Appearance="Danger"
                            Command="{Binding ResetCommand}"
                            FontSize="24"
                            ToolTip="Programmcode zurücksetzen">
                            <ui:Button.Icon>
                                <ui:SymbolIcon Filled="True" Symbol="ArrowHookDownLeft20" />
                            </ui:Button.Icon>
                        </ui:Button>
                        <ui:Button
                            Grid.Column="2"
                            Width="32"
                            Height="32"
                            Padding="0"
                            Appearance="Success"
                            Command="{Binding RunCommand}"
                            FontSize="22"
                            ToolTip="Kompilieren &amp; Starten">
                            <ui:Button.Icon>
                                <ui:SymbolIcon Filled="True" Symbol="PlaySettings20" />
                            </ui:Button.Icon>
                        </ui:Button>
                    </Grid>

                    <GridSplitter
                        Grid.Row="2"
                        Height="12"
                        Margin="8,0"
                        HorizontalAlignment="Stretch" />

                    <Border
                        Grid.Row="3"
                        Background="#202020"
                        BorderThickness="0"
                        CornerRadius="4">
                        <ScrollViewer Background="Blue" HorizontalScrollBarVisibility="Auto">
                            <TextBlock
                                Margin="8,4"
                                VerticalAlignment="Center"
                                Foreground="#5DFFFFFF"
                                TextWrapping="NoWrap">
                                <Run Text="{Binding OutputKind, Mode=OneWay, TargetNullValue='Teste dein Programm, indem du auf Starten in der rechten oberen Ecke drückst oder setze alles auf Anfang, indem du auf Zurücksetzen drückst', FallbackValue='Teste dein Programm, indem du auf Starten in der rechten oberen Ecke drückst oder setze alles auf Anfang, indem du auf Zurücksetzen drückst'}" /><Run Text=":" />
                                <Run Foreground="#C5FFFFFF" Text="{Binding Output, Mode=OneWay, TargetNullValue='', FallbackValue=''}" />
                            </TextBlock>
                        </ScrollViewer>
                    </Border>
                </Grid>
            </DataTemplate>

            <DataTemplate x:Key="CodingAnswerTemplate" DataType="{x:Type que:CodingQuestion}">
                <ui:Card Margin="0,0,0,8" Padding="12">
                    <Grid Height="500">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="1*" MinHeight="120" />
                            <RowDefinition Height="19" />
                            <RowDefinition Height="0*" MinHeight="65" />
                        </Grid.RowDefinitions>

                        <ele:AnswerHeader />

                        <Grid Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="8" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <ui:PassiveScrollViewer Name="OwnCodingContainer" HorizontalScrollBarVisibility="Auto">
                                <ui:PassiveScrollViewer.OpacityMask>
                                    <VisualBrush>
                                        <VisualBrush.Visual>
                                            <Rectangle
                                                Width="{Binding ActualWidth, ElementName=OwnCodingContainer}"
                                                Height="{Binding ActualHeight, ElementName=OwnCodingContainer}"
                                                Fill="Black"
                                                RadiusX="5"
                                                RadiusY="5" />
                                        </VisualBrush.Visual>
                                    </VisualBrush>
                                </ui:PassiveScrollViewer.OpacityMask>

                                <TextBox
                                    VerticalAlignment="Stretch"
                                    syn:SyntaxBox.Enable="True"
                                    syn:SyntaxBox.ExpandTabs="True"
                                    syn:SyntaxBox.LineNumbersBackground="#202020"
                                    syn:SyntaxBox.LineNumbersForeground="#5DFFFFFF"
                                    syn:SyntaxBox.ShowLineNumbers="True"
                                    syn:SyntaxBox.SyntaxDrivers="{StaticResource SynDrivers}"
                                    AcceptsReturn="True"
                                    AcceptsTab="True"
                                    Background="#202020"
                                    BorderThickness="0"
                                    CaretBrush="White"
                                    FontFamily="Consolas"
                                    FontSize="16"
                                    Foreground="#ffffff"
                                    IsReadOnly="True"
                                    Text="{Binding Code}" />
                            </ui:PassiveScrollViewer>
                            <Grid
                                Margin="7,2,25,7"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Top">
                                <Rectangle
                                    Grid.ColumnSpan="5"
                                    Margin="-7"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    Fill="{DynamicResource CardBackgroundOverlayBrush}"
                                    RadiusX="8"
                                    RadiusY="8" />

                                <Border
                                    Padding="4"
                                    VerticalAlignment="Center"
                                    Background="{DynamicResource CardBackgroundPointerOver}"
                                    CornerRadius="4">
                                    <TextBlock
                                        FontSize="14"
                                        FontWeight="DemiBold"
                                        Opacity="0.7"
                                        Text="Deine Antwort" />
                                </Border>
                            </Grid>

                            <ui:PassiveScrollViewer
                                Name="SolutionCodingContainer"
                                Grid.Column="2"
                                HorizontalScrollBarVisibility="Auto">
                                <ui:PassiveScrollViewer.OpacityMask>
                                    <VisualBrush>
                                        <VisualBrush.Visual>
                                            <Rectangle
                                                Width="{Binding ActualWidth, ElementName=SolutionCodingContainer}"
                                                Height="{Binding ActualHeight, ElementName=SolutionCodingContainer}"
                                                Fill="Black"
                                                RadiusX="5"
                                                RadiusY="5" />
                                        </VisualBrush.Visual>
                                    </VisualBrush>
                                </ui:PassiveScrollViewer.OpacityMask>

                                <TextBox
                                    VerticalAlignment="Stretch"
                                    syn:SyntaxBox.Enable="True"
                                    syn:SyntaxBox.ExpandTabs="True"
                                    syn:SyntaxBox.LineNumbersBackground="#202020"
                                    syn:SyntaxBox.LineNumbersForeground="#5DFFFFFF"
                                    syn:SyntaxBox.ShowLineNumbers="True"
                                    syn:SyntaxBox.SyntaxDrivers="{StaticResource SynDrivers}"
                                    AcceptsReturn="True"
                                    AcceptsTab="True"
                                    Background="#202020"
                                    BorderThickness="0"
                                    CaretBrush="White"
                                    FontFamily="Consolas"
                                    FontSize="16"
                                    IsReadOnly="True"
                                    Text="{Binding Solution, Mode=OneTime}" />
                            </ui:PassiveScrollViewer>
                            <Grid
                                Grid.Column="2"
                                Margin="7,2,25,7"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Top">
                                <Rectangle
                                    Grid.ColumnSpan="5"
                                    Margin="-7"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    Fill="{DynamicResource CardBackgroundOverlayBrush}"
                                    RadiusX="8"
                                    RadiusY="8" />

                                <Border
                                    Padding="4"
                                    VerticalAlignment="Center"
                                    Background="{DynamicResource CardBackgroundPointerOver}"
                                    CornerRadius="4">
                                    <TextBlock
                                        FontSize="14"
                                        FontWeight="DemiBold"
                                        Opacity="0.7"
                                        Text="Musterlösung" />
                                </Border>
                            </Grid>
                        </Grid>

                        <GridSplitter
                            Grid.Row="2"
                            Height="12"
                            Margin="8,0"
                            HorizontalAlignment="Stretch" />

                        <Border
                            Name="OutputConsole"
                            Grid.Row="3"
                            Background="#4B3033"
                            BorderThickness="0"
                            CornerRadius="4">
                            <ui:PassiveScrollViewer HorizontalScrollBarVisibility="Auto">
                                <TextBlock
                                    Margin="8,4"
                                    VerticalAlignment="Center"
                                    Foreground="#5DFFFFFF"
                                    TextWrapping="NoWrap">
                                    <Run Text="{Binding OutputKind, Mode=OneWay, TargetNullValue='Programm wurde noch nicht ausgeführt', FallbackValue='Programm wurde noch nicht ausgeführt'}" /><Run Text=":" />
                                    <Run Foreground="#C5FFFFFF" Text="{Binding Output, Mode=OneWay, TargetNullValue='', FallbackValue=''}" />
                                </TextBlock>
                            </ui:PassiveScrollViewer>
                        </Border>
                    </Grid>
                </ui:Card>

                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding IsCorrect}" Value="True">
                        <Setter TargetName="OutputConsole" Property="Background" Value="#395435" />
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>

        </ResourceDictionary>
    </Application.Resources>
</Application>
